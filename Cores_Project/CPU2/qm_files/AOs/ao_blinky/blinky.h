//$file${.::Cores_Project::CPU2::qm_files::AOs::ao_blinky::blinky.h} vvvvvvvvv
//
// Model: main_model.qm
// File:  ${.::Cores_Project::CPU2::qm_files::AOs::ao_blinky::blinky.h}
//
// This code has been generated by QM 6.1.1 <www.state-machine.com/qm>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This generated code is open source software: you can redistribute it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.
//
// NOTE:
// Alternatively, this generated code may be distributed under the terms
// of Quantum Leaps commercial licenses, which expressly supersede the GNU
// General Public License and are specifically designed for licensees
// interested in retaining the proprietary status of their code.
//
// Contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//
//$endhead${.::Cores_Project::CPU2::qm_files::AOs::ao_blinky::blinky.h} ^^^^^^
#ifndef BLINKY_H_
#define BLINKY_H_

#include "main_qm.h"

// Orthogonal Component


// Declare your AO:

//$declare${CPU2::AOs::AO_BLINKY} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${CPU2::AOs::AO_BLINKY::blinky} ............................................
typedef struct {
// protected:
    QActive super;

// private:
    QTimeEvt time_evt;
} blinky;

// public:
void blinky_led_on(blinky * const me);
void blinky_led_off(blinky * const me);

// protected:
QState blinky_initial(blinky * const me, void const * const par);
QState blinky_off(blinky * const me, QEvt const * const e);
QState blinky_on(blinky * const me, QEvt const * const e);

//${CPU2::AOs::AO_BLINKY::inst_ao_blinky} ....................................
extern blinky inst_ao_blinky;

//${CPU2::AOs::AO_BLINKY::globals::p_ao_blinky} ..............................
extern QActive * const p_ao_blinky;

//${CPU2::AOs::AO_BLINKY::globals::ao_blinky_ctor} ...........................
void ao_blinky_ctor(const QActive  * const pAO);
//$enddecl${CPU2::AOs::AO_BLINKY} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#endif // BLINKY_H_
